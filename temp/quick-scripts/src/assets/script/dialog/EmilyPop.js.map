{"version":3,"sources":["assets/script/dialog/EmilyPop.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2DAAiE;AACjE,6DAAkD;AAE5C,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEA2DC;QAxDG,QAAE,GAAY,IAAI,CAAC;QAGnB,gBAAU,GAAc,IAAI,CAAC;QAG7B,cAAQ,GAAc,IAAI,CAAC;QAG3B,aAAO,GAAY,IAAI,CAAC;QAGxB,cAAQ,GAAY,IAAI,CAAC;QAEzB,SAAG,GAAmB,IAAI,CAAC;QAE3B,cAAQ,GAAa,IAAI,CAAC;;IAwC9B,CAAC;IAtCG,2BAAQ,GAAR,UAAS,IAAI;QACT,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAG,IAAI,CAAC,KAAK,EAAC;YACV,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;SAChC;aAAI;YACD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;SAC/B;IACL,CAAC;IAED,yBAAM,GAAN;QACI,iCAAe,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,GAAG,QAAQ,GAAG,CAAC,yBAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjH,CAAC;IAGD,wBAAK,GAAL;QACI,iCAAe,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvC,CAAC;IAED,sCAAmB,GAAnB;QACI,iCAAe,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;QACnD,oCAAoC;QAEpC,yBAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;QAC9B,yBAAM,CAAC,WAAW,EAAE,CAAC;QACrB,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,uBAAK,CAAC,KAAK,CAAC,CAAC;QAEnC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IAExB,CAAC;IAED,gCAAa,GAAb;QACI,iCAAe,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAvDD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;wCACC;IAGnB;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;gDACS;IAG7B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;8CACO;IAG3B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;6CACM;IAGxB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACO;IAfR,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA2D5B;IAAD,eAAC;CA3DD,AA2DC,CA3DqC,EAAE,CAAC,SAAS,GA2DjD;kBA3DoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import { princessControl, delay } from \"../tool/princessControl\";\nimport { pgData } from \"../tool/princessGameData\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class EmilyPop extends cc.Component {\n\n    @property(cc.Node)\n    bg: cc.Node = null;\n\n    @property(cc.Sprite)\n    playerIcon: cc.Sprite = null;\n\n    @property(cc.Sprite)\n    userIcon: cc.Sprite = null;\n    \n    @property(cc.Node)\n    winNode: cc.Node = null;\n    \n    @property(cc.Node)\n    failNode: cc.Node = null;\n    \n    img: cc.SpriteFrame = null;\n\n    callback: Function = null;\n\n    initData(data) {\n        this.img = data.img;\n        this.playerIcon.spriteFrame = this.img;\n        this.callback = data.callback;\n        if(data.state){\n            this.winNode.active = true;\n            this.failNode.active = false;\n        }else{\n            this.winNode.active = false;\n            this.failNode.active = true;\n        }\n    }\n\n    onLoad(): void {\n        princessControl.princessResUtil.loadSprite(\"meimei/\" + \"meimei\" + (pgData.userData.avatarId), this.userIcon);\n    }\n\n\n    start(): void {\n        princessControl.adapterBg(this.bg);\n    }\n\n    onClick_continueBtn() {\n        princessControl.princessSoundTool.commonBtnClick();\n        // this.callback && this.callback();\n\n        pgData.userData.isHall = true;\n        pgData.storageData();\n        cc.director.loadScene(delay.glass);\n\n        this.node.destroy();\n\n    }\n\n    onClick_close() {\n        princessControl.princessSoundTool.commonBtnClick();\n        this.node.destroy();\n    }\n}\n"]}